
services:
  app:
    container_name: aers
    build:
      context: .
      dockerfile: docker/${ENVIRONMENT}/Dockerfile
      args:
        - CARGO_TARGET_DIR=/cargo-target
    ports:
      - ${PORT}:${PORT}
    environment:
      PORT: 5006
      ENVIRONMENT: dev
      DATABASE_NAME: aers
      DATABASE_USER: aers
      DATABASE_PASSWORD: aers
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
      JWT_SIGNING_KEY: fXUuojVKfWgVi3qLgQl8GjPWHsihf33aExhi
    env_file:
      - .env
    depends_on:
      database: 
        condition: service_healthy
    networks:
      - internal
    volumes:
      - .:/app:cached
      - cargo-target:/cargo-target:delegated
      - rust-cache:/usr/local/cargo/registry:delegated
    command: cargo watch -qcx run 
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s  # Wait 30 seconds before starting health checks

  database:
    image: postgres:15-alpine 
    restart: always
    container_name: postgres
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
  # pgadmin:
  #   image: dpage/pgadmin4
    # restart: always
    # ports:
    #   - "8888:80"
    # environment:
    #   PGADMIN_DEFAULT_EMAIL: admin@aers.com
    #   PGADMIN_DEFAULT_PASSWORD: aers
    # volumes:
    #   - pgadmin-data:/var/lib/pgadmin
    # depends_on:
    #   database:
    #     condition: service_healthy
networks:
  internal:
    name: aers-network

volumes:
  cargo-target:
  rust-cache:
  pgadmin-data: